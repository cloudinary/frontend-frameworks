import { lazyload } from 'plugins/lazyload';
import {Plugins, HtmlPluginState, BaseAnalyticsOptions, PluginResponse} from '../types'
import {CloudinaryVideo, CloudinaryImage} from "@cloudinary/url-gen";

/**
 * Iterate through plugins and break in cases where the response is canceled. The
 * response is canceled if component is updated or unmounted
 * @param element {HTMLImageElement|HTMLVideoElement} Html Image or Video element
 * @param pluginCloudinaryAsset {CloudinaryImage|CloudinaryVideo} The Cloudinary asset generated by base
 * @param plugins {plugins} array of plugins passed in by the user
 * @param pluginState {htmlPluginState} Holds cleanup callbacks and event subscriptions
 * @param analyticsOptions {BaseAnalyticsOptions} analytics options for the url to be created
 */
export async function render(element: HTMLImageElement | HTMLVideoElement, pluginCloudinaryAsset: CloudinaryImage | CloudinaryVideo, plugins: Plugins, pluginState: HtmlPluginState, analyticsOptions?: BaseAnalyticsOptions) {
    if (plugins === undefined) return;
    let response: PluginResponse;
    for (let i = 0; i < plugins.length; i++) {
        // TODO: We have to pass all plugins to each plugin (so that each can determine what to do)
        // 1. Pass plugins as a fifth parameter below (after analyticsOptions)
        // 
        // 2. Inside each plugin we can use `name` property of the plugin functions to see what was added
        // 
        // Example given the plugins look like below: 
        // const plugins = [lazyload(), responsive()]
        // Then if you console log plugins[0].name you should get 'bound lazyloadPlugin'
        // plugins[0].name === 'bound lazyloadPlugin'
        const pluginResponse = await plugins[i](element, pluginCloudinaryAsset, pluginState, analyticsOptions);
        if (response === 'canceled') {
            break;
        }
        if(typeof pluginResponse === 'object') {
            response = {...response, ...pluginResponse};
        } else {
            response = pluginResponse
        }
    }
    if (response !== 'canceled') {
        return response;
    }
}
